
    // display: flex;
    // width: 1200px;
    // justify-content: center;
    // align-items: center;

@mixin page-wide-section-wrapper{
    display: flex;
    justify-content: center;
    width: 100vw;
    height: fit-content;
    @content;
}

@mixin make-bgcolor-wide($color: white){ /// workaround to extend the background-color past a div wrapper
    &::before {
    content:"";
    background-color: $color;
    position: absolute;
    height: 100%;
    width: 200vw;
    left: -100vw;
    z-index: -1;
    @content;
  }
}

@mixin MQ($bp, $func){
    @if not map-has-key($MQ_breakpoints_map,$bp){
        @error "Your trying to call a 'break point' that does not exist in the MQ_breakpoints_map map used in the @mixin MQ().";
    }@else if not map-has-key($MQ_func_map, $func){
        @error "Your trying to use a $func that does not exist in the $MQ_func_map map used in the @mixin MQ().";
    }@else{
        @media(map-get($MQ_func_map,$func): map-get($MQ_breakpoints_map,$bp)){
            @content;
        }
    }   
}

@mixin place-awesome-icon($name, $size: $default-awesome-icon-size, $orientation: 'before'){
    @if map-has-key($awesome_icon_map,$name){
        font-size: $size;
        &::#{$orientation}{
            display:flex;
            justify-content: center;
            font-family: "FontAwesome";
            content: map-get($awesome_icon_map,$name);
            @content;
        }
    }@else{
        @error "Your trying to call the font name '#{$name}' which does not exist in the awesome_icon_map used in the @mixin place-awesome-icon().";
    }
}

@mixin build-button($bg_color: null, $b_color: $bg_color, $hv_bg_color: null, $hv_color: white){
    background-color: $bg_color;
    border-color: $b_color;
    &:hover{
        color:$hv_color;
        background-color: $hv_bg_color;
    }
}


// helpers

@mixin rotate-phone-icon($deg: -45deg){
-webkit-transform: rotate($deg);
-moz-transform: rotate($deg);
-ms-transform: rotate($deg);
-o-transform: rotate($deg);
transform: rotate($deg);
}

@mixin clearfix{
content: "";
clear: both;
display: table;
}

@mixin fix-normalize-transparency($c){  // fixes the normalize.css transparency for anchor elements background colour.
    background-color: darken(rgba($color: $c, $alpha: 1.0),$darken-submenu-amt);
}